//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RestConsumo.ServiciosRest {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Reserva", Namespace="http://schemas.datacontract.org/2004/07/servicioTickets.dominio")]
    [System.SerializableAttribute()]
    public partial class Reserva : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AsientosReservadosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EstadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaReservaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReservaIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UsuarioIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VueloIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AsientosReservados {
            get {
                return this.AsientosReservadosField;
            }
            set {
                if ((this.AsientosReservadosField.Equals(value) != true)) {
                    this.AsientosReservadosField = value;
                    this.RaisePropertyChanged("AsientosReservados");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Estado {
            get {
                return this.EstadoField;
            }
            set {
                if ((object.ReferenceEquals(this.EstadoField, value) != true)) {
                    this.EstadoField = value;
                    this.RaisePropertyChanged("Estado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FechaReserva {
            get {
                return this.FechaReservaField;
            }
            set {
                if ((this.FechaReservaField.Equals(value) != true)) {
                    this.FechaReservaField = value;
                    this.RaisePropertyChanged("FechaReserva");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReservaID {
            get {
                return this.ReservaIDField;
            }
            set {
                if ((this.ReservaIDField.Equals(value) != true)) {
                    this.ReservaIDField = value;
                    this.RaisePropertyChanged("ReservaID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UsuarioID {
            get {
                return this.UsuarioIDField;
            }
            set {
                if ((this.UsuarioIDField.Equals(value) != true)) {
                    this.UsuarioIDField = value;
                    this.RaisePropertyChanged("UsuarioID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VueloID {
            get {
                return this.VueloIDField;
            }
            set {
                if ((this.VueloIDField.Equals(value) != true)) {
                    this.VueloIDField = value;
                    this.RaisePropertyChanged("VueloID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiciosRest.IReservaService")]
    public interface IReservaService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservaService/BookFlight", ReplyAction="http://tempuri.org/IReservaService/BookFlightResponse")]
        bool BookFlight(int vueloID, int userID, int asientos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservaService/BookFlight", ReplyAction="http://tempuri.org/IReservaService/BookFlightResponse")]
        System.Threading.Tasks.Task<bool> BookFlightAsync(int vueloID, int userID, int asientos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservaService/GetReservations", ReplyAction="http://tempuri.org/IReservaService/GetReservationsResponse")]
        RestConsumo.ServiciosRest.Reserva[] GetReservations(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservaService/GetReservations", ReplyAction="http://tempuri.org/IReservaService/GetReservationsResponse")]
        System.Threading.Tasks.Task<RestConsumo.ServiciosRest.Reserva[]> GetReservationsAsync(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservaService/CancelReservation", ReplyAction="http://tempuri.org/IReservaService/CancelReservationResponse")]
        bool CancelReservation(int reservaID, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservaService/CancelReservation", ReplyAction="http://tempuri.org/IReservaService/CancelReservationResponse")]
        System.Threading.Tasks.Task<bool> CancelReservationAsync(int reservaID, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservaService/ModifyReserva", ReplyAction="http://tempuri.org/IReservaService/ModifyReservaResponse")]
        string ModifyReserva(RestConsumo.ServiciosRest.Reserva reserva);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservaService/ModifyReserva", ReplyAction="http://tempuri.org/IReservaService/ModifyReservaResponse")]
        System.Threading.Tasks.Task<string> ModifyReservaAsync(RestConsumo.ServiciosRest.Reserva reserva);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReservaServiceChannel : RestConsumo.ServiciosRest.IReservaService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReservaServiceClient : System.ServiceModel.ClientBase<RestConsumo.ServiciosRest.IReservaService>, RestConsumo.ServiciosRest.IReservaService {
        
        public ReservaServiceClient() {
        }
        
        public ReservaServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReservaServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReservaServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReservaServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool BookFlight(int vueloID, int userID, int asientos) {
            return base.Channel.BookFlight(vueloID, userID, asientos);
        }
        
        public System.Threading.Tasks.Task<bool> BookFlightAsync(int vueloID, int userID, int asientos) {
            return base.Channel.BookFlightAsync(vueloID, userID, asientos);
        }
        
        public RestConsumo.ServiciosRest.Reserva[] GetReservations(string userID) {
            return base.Channel.GetReservations(userID);
        }
        
        public System.Threading.Tasks.Task<RestConsumo.ServiciosRest.Reserva[]> GetReservationsAsync(string userID) {
            return base.Channel.GetReservationsAsync(userID);
        }
        
        public bool CancelReservation(int reservaID, int userID) {
            return base.Channel.CancelReservation(reservaID, userID);
        }
        
        public System.Threading.Tasks.Task<bool> CancelReservationAsync(int reservaID, int userID) {
            return base.Channel.CancelReservationAsync(reservaID, userID);
        }
        
        public string ModifyReserva(RestConsumo.ServiciosRest.Reserva reserva) {
            return base.Channel.ModifyReserva(reserva);
        }
        
        public System.Threading.Tasks.Task<string> ModifyReservaAsync(RestConsumo.ServiciosRest.Reserva reserva) {
            return base.Channel.ModifyReservaAsync(reserva);
        }
    }
}
